#############################################################################################
#   Scalable Tucker Factorization for Sparse Tensors - Algorithms and Discoveries (ICDE 2018)
#   
#   Authors: Sejoon Oh (ohhenrie@snu.ac.kr), Seoul National University
#            Namyong Park (namyongp@cs.cmu.edu), Carnegie Mellon University
#            Lee Sael (saellee@gmail.com), Seoul National University
#            U Kang (ukang@snu.ac.kr), Seoul National University
#   
#   Version : 1.5
#   Date: 2018-07-11
#   Main contact: Sejoon Oh (ohhenrie@snu.ac.kr or sejun6431@gmail.com)
#
#   This software is free of charge under research purposes.
#   For commercial purposes, please contact the author.
#############################################################################################

1. Introduction

    P-Tucker is a scalable Tucker factorization method for sparse tensors.
    
    Please refer to the following website for the details of P-Tucker
  	https://datalab.snu.ac.kr/ptucker/

2. Usage

        * P-Tucker requires OpenMP 2.0 or above version! (if you use gcc/g++ compiler, it is installed by default)

		"make" command will create a single executable file, which is "P-Tucker".

		The executable file takes five arguments, which are the path of input tensor file, path of directory for storing results, tensor order, tensor rank, and number of threads. The arguments MUST BE valid and in the above order.

		ex) ./P-Tucker input.txt result/ 3 10 20

		If you put the command properly, P-Tucker will write all values of factor matrices and a core tensor in the result directory set by an argument. (PLEASE MAKE SURE THAT YOU HAVE A WRITE PERMISSION TO THE RESULT DIRECTORY!)

		ex) result/FACTOR1, result/CORETENSOR

		We note that input tensors must follow base-1 indexing and outputs are based on base-0 indexing.

3. Demo

	To run the demo, please follow the following procedure. Sample tensor is created as 100x100x100 size with 1,000 observable entries.

	1. Type "make demo"
	2. Check "sample/result" directory for the demo factorization results


4. Orthogonalization of factor matrices
    
    You can apply QR decompositions to output factor matrices and core tensor according to the main paper using MATLAB or other languages. Notice that current version of P-Tucker does not orthogonalize factor matrices and update a core tensor
    

5. P-Tucker-Cache and P-Tucker-APPROX 

	If you want to run P-Tucker-Cache or P-Tucker-APPROX, please contact the main author (Sejoon Oh, ohhenrie@snu.ac.kr)
